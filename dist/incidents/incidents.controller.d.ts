import { IncidentsService } from "./incidents.service";
import { CreateIncidentDto } from "./dto/create-incident.dto";
import { UpdateIncidentDto } from "./dto/update-incident.dto";
export declare class IncidentsController {
    private readonly incidentsService;
    constructor(incidentsService: IncidentsService);
    create(createIncidentDto: CreateIncidentDto): Promise<{
        chauffeur: {
            email: string;
            password: string | null;
            nom: string;
            prenom: string;
            id: number;
            createdAt: Date;
            updatedAt: Date;
            telephone: string;
            statut: import(".prisma/client").$Enums.StatutChauffeur;
            statutActivite: import(".prisma/client").$Enums.StatutActivite;
            vehiculeId: number | null;
            photoUrl: string | null;
            dateInscription: Date;
            evaluation: number;
            nbCourses: number;
            resetCode: string | null;
            resetCodeExpiry: Date | null;
            smsOtp: string | null;
            smsOtpExpiry: Date | null;
            phoneVerified: boolean | null;
        };
        vehicule: {
            type: import(".prisma/client").$Enums.TypeVehicule;
            id: number;
            createdAt: Date;
            updatedAt: Date;
            statut: import(".prisma/client").$Enums.StatutVehicule;
            immatriculation: string;
            marque: string;
            modele: string;
            categorie: import(".prisma/client").$Enums.CategoryVehicule;
            tarifHoraire: number | null;
            tarifJournalier: number | null;
            maxPower: number | null;
            fuelConsumption: number | null;
            maxSpeed: number | null;
            acceleration: number | null;
            capacity: number | null;
            color: string | null;
            fuelType: import(".prisma/client").$Enums.FuelType | null;
            gearType: import(".prisma/client").$Enums.GearType | null;
            dateAcquisition: Date;
            kilometrage: number;
            photos: string[];
            dateControleTechnique: Date;
        };
        course: {
            id: number;
            createdAt: Date;
            updatedAt: Date;
            chauffeurId: number | null;
            startTime: Date | null;
            clientId: number | null;
            startLocation: string;
            endLocation: string;
            endTime: Date | null;
            estimatedDuration: string;
            currentLocation: string | null;
            estimatedPrice: number;
            finalPrice: number | null;
            paymentMethod: string;
            status: import(".prisma/client").$Enums.StatutCourse;
            typeService: import(".prisma/client").$Enums.TypeService;
            locationId: number | null;
            transportId: number | null;
        };
    } & {
        type: import(".prisma/client").$Enums.TypeIncident;
        description: string;
        id: number;
        createdAt: Date;
        updatedAt: Date;
        vehiculeId: number | null;
        chauffeurId: number | null;
        status: import(".prisma/client").$Enums.StatutIncident;
        date: Date;
        courseId: number | null;
    }>;
    findAll(skip?: string, take?: string, type?: string, status?: string, chauffeurId?: string, vehiculeId?: string, courseId?: string): Promise<({
        chauffeur: {
            email: string;
            password: string | null;
            nom: string;
            prenom: string;
            id: number;
            createdAt: Date;
            updatedAt: Date;
            telephone: string;
            statut: import(".prisma/client").$Enums.StatutChauffeur;
            statutActivite: import(".prisma/client").$Enums.StatutActivite;
            vehiculeId: number | null;
            photoUrl: string | null;
            dateInscription: Date;
            evaluation: number;
            nbCourses: number;
            resetCode: string | null;
            resetCodeExpiry: Date | null;
            smsOtp: string | null;
            smsOtpExpiry: Date | null;
            phoneVerified: boolean | null;
        };
        vehicule: {
            type: import(".prisma/client").$Enums.TypeVehicule;
            id: number;
            createdAt: Date;
            updatedAt: Date;
            statut: import(".prisma/client").$Enums.StatutVehicule;
            immatriculation: string;
            marque: string;
            modele: string;
            categorie: import(".prisma/client").$Enums.CategoryVehicule;
            tarifHoraire: number | null;
            tarifJournalier: number | null;
            maxPower: number | null;
            fuelConsumption: number | null;
            maxSpeed: number | null;
            acceleration: number | null;
            capacity: number | null;
            color: string | null;
            fuelType: import(".prisma/client").$Enums.FuelType | null;
            gearType: import(".prisma/client").$Enums.GearType | null;
            dateAcquisition: Date;
            kilometrage: number;
            photos: string[];
            dateControleTechnique: Date;
        };
        course: {
            id: number;
            createdAt: Date;
            updatedAt: Date;
            chauffeurId: number | null;
            startTime: Date | null;
            clientId: number | null;
            startLocation: string;
            endLocation: string;
            endTime: Date | null;
            estimatedDuration: string;
            currentLocation: string | null;
            estimatedPrice: number;
            finalPrice: number | null;
            paymentMethod: string;
            status: import(".prisma/client").$Enums.StatutCourse;
            typeService: import(".prisma/client").$Enums.TypeService;
            locationId: number | null;
            transportId: number | null;
        };
    } & {
        type: import(".prisma/client").$Enums.TypeIncident;
        description: string;
        id: number;
        createdAt: Date;
        updatedAt: Date;
        vehiculeId: number | null;
        chauffeurId: number | null;
        status: import(".prisma/client").$Enums.StatutIncident;
        date: Date;
        courseId: number | null;
    })[]>;
    findOne(id: string): Promise<{
        chauffeur: {
            email: string;
            password: string | null;
            nom: string;
            prenom: string;
            id: number;
            createdAt: Date;
            updatedAt: Date;
            telephone: string;
            statut: import(".prisma/client").$Enums.StatutChauffeur;
            statutActivite: import(".prisma/client").$Enums.StatutActivite;
            vehiculeId: number | null;
            photoUrl: string | null;
            dateInscription: Date;
            evaluation: number;
            nbCourses: number;
            resetCode: string | null;
            resetCodeExpiry: Date | null;
            smsOtp: string | null;
            smsOtpExpiry: Date | null;
            phoneVerified: boolean | null;
        };
        vehicule: {
            type: import(".prisma/client").$Enums.TypeVehicule;
            id: number;
            createdAt: Date;
            updatedAt: Date;
            statut: import(".prisma/client").$Enums.StatutVehicule;
            immatriculation: string;
            marque: string;
            modele: string;
            categorie: import(".prisma/client").$Enums.CategoryVehicule;
            tarifHoraire: number | null;
            tarifJournalier: number | null;
            maxPower: number | null;
            fuelConsumption: number | null;
            maxSpeed: number | null;
            acceleration: number | null;
            capacity: number | null;
            color: string | null;
            fuelType: import(".prisma/client").$Enums.FuelType | null;
            gearType: import(".prisma/client").$Enums.GearType | null;
            dateAcquisition: Date;
            kilometrage: number;
            photos: string[];
            dateControleTechnique: Date;
        };
        course: {
            id: number;
            createdAt: Date;
            updatedAt: Date;
            chauffeurId: number | null;
            startTime: Date | null;
            clientId: number | null;
            startLocation: string;
            endLocation: string;
            endTime: Date | null;
            estimatedDuration: string;
            currentLocation: string | null;
            estimatedPrice: number;
            finalPrice: number | null;
            paymentMethod: string;
            status: import(".prisma/client").$Enums.StatutCourse;
            typeService: import(".prisma/client").$Enums.TypeService;
            locationId: number | null;
            transportId: number | null;
        };
    } & {
        type: import(".prisma/client").$Enums.TypeIncident;
        description: string;
        id: number;
        createdAt: Date;
        updatedAt: Date;
        vehiculeId: number | null;
        chauffeurId: number | null;
        status: import(".prisma/client").$Enums.StatutIncident;
        date: Date;
        courseId: number | null;
    }>;
    update(id: string, updateIncidentDto: UpdateIncidentDto): Promise<{
        chauffeur: {
            email: string;
            password: string | null;
            nom: string;
            prenom: string;
            id: number;
            createdAt: Date;
            updatedAt: Date;
            telephone: string;
            statut: import(".prisma/client").$Enums.StatutChauffeur;
            statutActivite: import(".prisma/client").$Enums.StatutActivite;
            vehiculeId: number | null;
            photoUrl: string | null;
            dateInscription: Date;
            evaluation: number;
            nbCourses: number;
            resetCode: string | null;
            resetCodeExpiry: Date | null;
            smsOtp: string | null;
            smsOtpExpiry: Date | null;
            phoneVerified: boolean | null;
        };
        vehicule: {
            type: import(".prisma/client").$Enums.TypeVehicule;
            id: number;
            createdAt: Date;
            updatedAt: Date;
            statut: import(".prisma/client").$Enums.StatutVehicule;
            immatriculation: string;
            marque: string;
            modele: string;
            categorie: import(".prisma/client").$Enums.CategoryVehicule;
            tarifHoraire: number | null;
            tarifJournalier: number | null;
            maxPower: number | null;
            fuelConsumption: number | null;
            maxSpeed: number | null;
            acceleration: number | null;
            capacity: number | null;
            color: string | null;
            fuelType: import(".prisma/client").$Enums.FuelType | null;
            gearType: import(".prisma/client").$Enums.GearType | null;
            dateAcquisition: Date;
            kilometrage: number;
            photos: string[];
            dateControleTechnique: Date;
        };
        course: {
            id: number;
            createdAt: Date;
            updatedAt: Date;
            chauffeurId: number | null;
            startTime: Date | null;
            clientId: number | null;
            startLocation: string;
            endLocation: string;
            endTime: Date | null;
            estimatedDuration: string;
            currentLocation: string | null;
            estimatedPrice: number;
            finalPrice: number | null;
            paymentMethod: string;
            status: import(".prisma/client").$Enums.StatutCourse;
            typeService: import(".prisma/client").$Enums.TypeService;
            locationId: number | null;
            transportId: number | null;
        };
    } & {
        type: import(".prisma/client").$Enums.TypeIncident;
        description: string;
        id: number;
        createdAt: Date;
        updatedAt: Date;
        vehiculeId: number | null;
        chauffeurId: number | null;
        status: import(".prisma/client").$Enums.StatutIncident;
        date: Date;
        courseId: number | null;
    }>;
    remove(id: string): Promise<{
        type: import(".prisma/client").$Enums.TypeIncident;
        description: string;
        id: number;
        createdAt: Date;
        updatedAt: Date;
        vehiculeId: number | null;
        chauffeurId: number | null;
        status: import(".prisma/client").$Enums.StatutIncident;
        date: Date;
        courseId: number | null;
    }>;
}
